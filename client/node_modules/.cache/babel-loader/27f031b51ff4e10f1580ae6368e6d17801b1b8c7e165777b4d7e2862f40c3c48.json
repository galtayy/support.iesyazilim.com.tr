{"ast":null,"code":"var _jsxFileName = \"/Users/gurkanaltay/Desktop/projects/support.iesyazilim.com.tr/client/src/components/ui/Badge.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statusStyles = {\n  pending: 'bg-yellow-100 text-yellow-800',\n  approved: 'bg-green-100 text-green-800',\n  rejected: 'bg-red-100 text-red-800'\n};\nconst Badge = ({\n  status,\n  label,\n  customClass\n}) => {\n  // If it's a status badge (pending, approved, rejected)\n  if (status && statusStyles[status]) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium ${statusStyles[status]}`,\n      children: label || status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If it's a custom badge\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium ${customClass}`,\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = Badge;\nexport default Badge;\nvar _c;\n$RefreshReg$(_c, \"Badge\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","statusStyles","pending","approved","rejected","Badge","status","label","customClass","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gurkanaltay/Desktop/projects/support.iesyazilim.com.tr/client/src/components/ui/Badge.js"],"sourcesContent":["import React from 'react';\n\nconst statusStyles = {\n  pending: 'bg-yellow-100 text-yellow-800',\n  approved: 'bg-green-100 text-green-800',\n  rejected: 'bg-red-100 text-red-800'\n};\n\nconst Badge = ({ status, label, customClass }) => {\n  // If it's a status badge (pending, approved, rejected)\n  if (status && statusStyles[status]) {\n    return (\n      <span className={`inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium ${statusStyles[status]}`}>\n        {label || status}\n      </span>\n    );\n  }\n  \n  // If it's a custom badge\n  return (\n    <span className={`inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium ${customClass}`}>\n      {label}\n    </span>\n  );\n};\n\nexport default Badge;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,+BAA+B;EACxCC,QAAQ,EAAE,6BAA6B;EACvCC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,KAAK,GAAGA,CAAC;EAAEC,MAAM;EAAEC,KAAK;EAAEC;AAAY,CAAC,KAAK;EAChD;EACA,IAAIF,MAAM,IAAIL,YAAY,CAACK,MAAM,CAAC,EAAE;IAClC,oBACEN,OAAA;MAAMS,SAAS,EAAE,2EAA2ER,YAAY,CAACK,MAAM,CAAC,EAAG;MAAAI,QAAA,EAChHH,KAAK,IAAID;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAEX;;EAEA;EACA,oBACEd,OAAA;IAAMS,SAAS,EAAE,2EAA2ED,WAAW,EAAG;IAAAE,QAAA,EACvGH;EAAK;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAACC,EAAA,GAhBIV,KAAK;AAkBX,eAAeA,KAAK;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}