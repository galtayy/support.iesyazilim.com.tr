{"ast":null,"code":"import api from'./api';// Support ticket related API calls\nconst ticketService={// Get all tickets with optional filtering\ngetTickets:function(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/tickets',{params:filters});},// Get single ticket by ID\ngetTicket:id=>{return api.get(`/tickets/${id}`);},// Create new ticket\ncreateTicket:ticketData=>{return api.post('/tickets',ticketData);},// Update ticket\nupdateTicket:(id,ticketData)=>{return api.put(`/tickets/${id}`,ticketData);},// Update ticket status (approve/reject)\nupdateTicketStatus:(id,status,approvalNotes)=>{return api.put(`/tickets/${id}/status`,{status,approvalNotes});},// Delete ticket\ndeleteTicket:id=>{return api.delete(`/tickets/${id}`);},// Upload image for a ticket\nuploadImage:(ticketId,formData)=>{return api.post(`/tickets/${ticketId}/images`,formData,{headers:{'Content-Type':'multipart/form-data'}});},// Delete ticket image\ndeleteImage:(ticketId,imageId)=>{return api.delete(`/tickets/${ticketId}/images/${imageId}`);}};export default ticketService;","map":{"version":3,"names":["api","ticketService","getTickets","filters","arguments","length","undefined","get","params","getTicket","id","createTicket","ticketData","post","updateTicket","put","updateTicketStatus","status","approvalNotes","deleteTicket","delete","uploadImage","ticketId","formData","headers","deleteImage","imageId"],"sources":["/Users/gurkanaltay/Desktop/projects/support.iesyazilim.com.tr/client/src/services/ticketService.js"],"sourcesContent":["import api from './api';\n\n// Support ticket related API calls\nconst ticketService = {\n  // Get all tickets with optional filtering\n  getTickets: (filters = {}) => {\n    return api.get('/tickets', { params: filters });\n  },\n  \n  // Get single ticket by ID\n  getTicket: (id) => {\n    return api.get(`/tickets/${id}`);\n  },\n  \n  // Create new ticket\n  createTicket: (ticketData) => {\n    return api.post('/tickets', ticketData);\n  },\n  \n  // Update ticket\n  updateTicket: (id, ticketData) => {\n    return api.put(`/tickets/${id}`, ticketData);\n  },\n  \n  // Update ticket status (approve/reject)\n  updateTicketStatus: (id, status, approvalNotes) => {\n    return api.put(`/tickets/${id}/status`, { status, approvalNotes });\n  },\n  \n  // Delete ticket\n  deleteTicket: (id) => {\n    return api.delete(`/tickets/${id}`);\n  },\n  \n  // Upload image for a ticket\n  uploadImage: (ticketId, formData) => {\n    return api.post(`/tickets/${ticketId}/images`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  \n  // Delete ticket image\n  deleteImage: (ticketId, imageId) => {\n    return api.delete(`/tickets/${ticketId}/images/${imageId}`);\n  }\n};\n\nexport default ticketService;"],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,OAAO,CAEvB;AACA,KAAM,CAAAC,aAAa,CAAG,CACpB;AACAC,UAAU,CAAE,QAAAA,CAAA,CAAkB,IAAjB,CAAAC,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CACvB,MAAO,CAAAJ,GAAG,CAACO,GAAG,CAAC,UAAU,CAAE,CAAEC,MAAM,CAAEL,OAAQ,CAAC,CAAC,CACjD,CAAC,CAED;AACAM,SAAS,CAAGC,EAAE,EAAK,CACjB,MAAO,CAAAV,GAAG,CAACO,GAAG,CAAC,YAAYG,EAAE,EAAE,CAAC,CAClC,CAAC,CAED;AACAC,YAAY,CAAGC,UAAU,EAAK,CAC5B,MAAO,CAAAZ,GAAG,CAACa,IAAI,CAAC,UAAU,CAAED,UAAU,CAAC,CACzC,CAAC,CAED;AACAE,YAAY,CAAEA,CAACJ,EAAE,CAAEE,UAAU,GAAK,CAChC,MAAO,CAAAZ,GAAG,CAACe,GAAG,CAAC,YAAYL,EAAE,EAAE,CAAEE,UAAU,CAAC,CAC9C,CAAC,CAED;AACAI,kBAAkB,CAAEA,CAACN,EAAE,CAAEO,MAAM,CAAEC,aAAa,GAAK,CACjD,MAAO,CAAAlB,GAAG,CAACe,GAAG,CAAC,YAAYL,EAAE,SAAS,CAAE,CAAEO,MAAM,CAAEC,aAAc,CAAC,CAAC,CACpE,CAAC,CAED;AACAC,YAAY,CAAGT,EAAE,EAAK,CACpB,MAAO,CAAAV,GAAG,CAACoB,MAAM,CAAC,YAAYV,EAAE,EAAE,CAAC,CACrC,CAAC,CAED;AACAW,WAAW,CAAEA,CAACC,QAAQ,CAAEC,QAAQ,GAAK,CACnC,MAAO,CAAAvB,GAAG,CAACa,IAAI,CAAC,YAAYS,QAAQ,SAAS,CAAEC,QAAQ,CAAE,CACvDC,OAAO,CAAE,CACP,cAAc,CAAE,qBAClB,CACF,CAAC,CAAC,CACJ,CAAC,CAED;AACAC,WAAW,CAAEA,CAACH,QAAQ,CAAEI,OAAO,GAAK,CAClC,MAAO,CAAA1B,GAAG,CAACoB,MAAM,CAAC,YAAYE,QAAQ,WAAWI,OAAO,EAAE,CAAC,CAC7D,CACF,CAAC,CAED,cAAe,CAAAzB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}