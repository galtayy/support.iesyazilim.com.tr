{"ast":null,"code":"import api from './api';\n\n// Support ticket related API calls\nconst ticketService = {\n  // Get all tickets with optional filtering\n  getTickets: (filters = {}) => {\n    return api.get('/tickets', {\n      params: filters\n    });\n  },\n  // Get single ticket by ID\n  getTicket: id => {\n    return api.get(`/tickets/${id}`);\n  },\n  // Create new ticket\n  createTicket: ticketData => {\n    return api.post('/tickets', ticketData);\n  },\n  // Update ticket\n  updateTicket: (id, ticketData) => {\n    return api.put(`/tickets/${id}`, ticketData);\n  },\n  // Update ticket status (approve/reject)\n  updateTicketStatus: (id, status, approvalNotes) => {\n    return api.put(`/tickets/${id}/status`, {\n      status,\n      approvalNotes\n    });\n  },\n  // Delete ticket\n  deleteTicket: id => {\n    return api.delete(`/tickets/${id}`);\n  },\n  // Upload image for a ticket\n  uploadImage: (ticketId, formData) => {\n    return api.post(`/tickets/${ticketId}/images`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  // Delete ticket image\n  deleteImage: (ticketId, imageId) => {\n    return api.delete(`/tickets/${ticketId}/images/${imageId}`);\n  }\n};\nexport default ticketService;","map":{"version":3,"names":["api","ticketService","getTickets","filters","get","params","getTicket","id","createTicket","ticketData","post","updateTicket","put","updateTicketStatus","status","approvalNotes","deleteTicket","delete","uploadImage","ticketId","formData","headers","deleteImage","imageId"],"sources":["/Users/gurkanaltay/Desktop/projects/support.iesyazilim.com.tr/client/src/services/ticketService.js"],"sourcesContent":["import api from './api';\n\n// Support ticket related API calls\nconst ticketService = {\n  // Get all tickets with optional filtering\n  getTickets: (filters = {}) => {\n    return api.get('/tickets', { params: filters });\n  },\n  \n  // Get single ticket by ID\n  getTicket: (id) => {\n    return api.get(`/tickets/${id}`);\n  },\n  \n  // Create new ticket\n  createTicket: (ticketData) => {\n    return api.post('/tickets', ticketData);\n  },\n  \n  // Update ticket\n  updateTicket: (id, ticketData) => {\n    return api.put(`/tickets/${id}`, ticketData);\n  },\n  \n  // Update ticket status (approve/reject)\n  updateTicketStatus: (id, status, approvalNotes) => {\n    return api.put(`/tickets/${id}/status`, { status, approvalNotes });\n  },\n  \n  // Delete ticket\n  deleteTicket: (id) => {\n    return api.delete(`/tickets/${id}`);\n  },\n  \n  // Upload image for a ticket\n  uploadImage: (ticketId, formData) => {\n    return api.post(`/tickets/${ticketId}/images`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  \n  // Delete ticket image\n  deleteImage: (ticketId, imageId) => {\n    return api.delete(`/tickets/${ticketId}/images/${imageId}`);\n  }\n};\n\nexport default ticketService;"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;;AAEvB;AACA,MAAMC,aAAa,GAAG;EACpB;EACAC,UAAU,EAAEA,CAACC,OAAO,GAAG,CAAC,CAAC,KAAK;IAC5B,OAAOH,GAAG,CAACI,GAAG,CAAC,UAAU,EAAE;MAAEC,MAAM,EAAEF;IAAQ,CAAC,CAAC;EACjD,CAAC;EAED;EACAG,SAAS,EAAGC,EAAE,IAAK;IACjB,OAAOP,GAAG,CAACI,GAAG,CAAC,YAAYG,EAAE,EAAE,CAAC;EAClC,CAAC;EAED;EACAC,YAAY,EAAGC,UAAU,IAAK;IAC5B,OAAOT,GAAG,CAACU,IAAI,CAAC,UAAU,EAAED,UAAU,CAAC;EACzC,CAAC;EAED;EACAE,YAAY,EAAEA,CAACJ,EAAE,EAAEE,UAAU,KAAK;IAChC,OAAOT,GAAG,CAACY,GAAG,CAAC,YAAYL,EAAE,EAAE,EAAEE,UAAU,CAAC;EAC9C,CAAC;EAED;EACAI,kBAAkB,EAAEA,CAACN,EAAE,EAAEO,MAAM,EAAEC,aAAa,KAAK;IACjD,OAAOf,GAAG,CAACY,GAAG,CAAC,YAAYL,EAAE,SAAS,EAAE;MAAEO,MAAM;MAAEC;IAAc,CAAC,CAAC;EACpE,CAAC;EAED;EACAC,YAAY,EAAGT,EAAE,IAAK;IACpB,OAAOP,GAAG,CAACiB,MAAM,CAAC,YAAYV,EAAE,EAAE,CAAC;EACrC,CAAC;EAED;EACAW,WAAW,EAAEA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IACnC,OAAOpB,GAAG,CAACU,IAAI,CAAC,YAAYS,QAAQ,SAAS,EAAEC,QAAQ,EAAE;MACvDC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;EACJ,CAAC;EAED;EACAC,WAAW,EAAEA,CAACH,QAAQ,EAAEI,OAAO,KAAK;IAClC,OAAOvB,GAAG,CAACiB,MAAM,CAAC,YAAYE,QAAQ,WAAWI,OAAO,EAAE,CAAC;EAC7D;AACF,CAAC;AAED,eAAetB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}